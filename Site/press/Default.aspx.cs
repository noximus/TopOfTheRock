using System;using System.Text;using System.Data;using System.Data.SqlClient;using System.Configuration;using System.Collections;using System.Web;using System.Web.Security;using System.Web.UI;using System.Web.UI.WebControls;using System.Web.UI.WebControls.WebParts;using System.Web.UI.HtmlControls;public partial class press_Default :BaseNoneSecurePage{    protected void Page_Load(object sender, EventArgs e) {	  // Which page are we starting at?	  int startItem = 12 * (Convert.ToInt32("0" + Request["page"]));	  	  int i = 0; int tilesPassed = 0;	  SqlDataReader rdrPress = dataAccess.fetchRDR("select * from press where status = 1 order by PressDate desc");	  while (i < startItem) { rdrPress.Read(); i++; }  // skip ahead to the first item for that page	  StringBuilder sb = new StringBuilder();	  sb.AppendLine("<script type=\"text/javascript\">");	  sb.AppendLine("var so = new SWFObject(\"../common/swf/press.swf\", \"TOTR Nav\", \"878\", \"300\", \"8\", \"#262626\");");	  sb.AppendLine("so.addParam(\"wmode\", \"transparent\");");	  sb.AppendLine("so.addParam(\"salign\", \"tl\");");	  int ID;	  while (i < startItem + 12 && rdrPress.Read()) {	  // work around: get file path for content	  	string strFilePath = "http://totr2.maxliberman.com";		ID = Convert.ToInt32(rdrPress["ID"]);		sb.AppendLine("so.addVariable(\"PressTitle" + i + "\", \"" +		    rdrPress["PressTitle"].ToString().Replace("\"", "\\\"") + "\");");		sb.AppendLine("so.addVariable(\"ID" + i + "\", \"" +		    rdrPress["ID"].ToString().Replace("\"", "\\\"") + "\");");		sb.AppendLine("so.addVariable(\"ContentType" + i + "\", \"" +		    rdrPress["ContentType"].ToString().Replace("\"", "\\\"") + "\");");		switch (Convert.ToInt32(rdrPress["ContentType"])) {		    case 1:  // audio			  sb.AppendLine("so.addVariable(\"Audio" + i + "\", \"/library/press/audio/"				+ ID + ".mp3\");");			  strFilePath += "/library/press/audio/" + ID + ".mp3";			  break;		    case 2:  // video			  sb.AppendLine("so.addVariable(\"Video" + i + "\", \"/library/press/video/"				+ ID + "." + rdrPress["VideoType"] + "\");");			  strFilePath += "/library/press/video/" + ID + "." + rdrPress["VideoType"];			  			  break;		    default:  //text			// work around			  strFilePath += "/library/press/thumb/" + ID + ".pdf";			  			  break;		}		sb.AppendLine("so.addVariable(\"Thumb" + i + "\", \"/library/press/thumb/"		    + ID + "." + rdrPress["PressThumbImgType"] + "\");");		sb.AppendLine("so.addVariable(\"ContThumb" + i + "\", \"/library/press/contthumb/"		    + ID + "." + rdrPress["ContentThumbImgType"] + "\");");		sb.AppendLine("so.addVariable(\"PressDate" + i + "\", \"" +		    rdrPress["PressDate"].ToString().Replace("\"", "\\\"") + "\");");		sb.AppendLine("so.addVariable(\"Description" + i + "\", \"" +		    rdrPress["Deacription"].ToString().Replace("\"", "\\\"") + "\");");		sb.AppendLine("so.addVariable(\"PressThumbImgType" + i + "\", \"" +		    rdrPress["PressThumbImgType"].ToString().Replace("\"", "\\\"") + "\");");		sb.AppendLine("so.addVariable(\"WebLink" + i + "\", \"" +		    // rdrPress["WebLink"].ToString().Replace("\"", "\\\"") + "\");");		    strFilePath + "\");");		i++; tilesPassed++;	  }	  rdrPress.Close();	  sb.AppendLine("so.addVariable(\"tilespassed\", \"" + tilesPassed + "\");");	  sb.AppendLine("so.write(\"DivFlag\");");	  sb.AppendLine("</script>");	  litPressContent.Text = sb.ToString();    }}